unit ClienteView;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Mask,
  SQLEd, Vcl.Buttons, SQLBtn, Vcl.Grids, RPStringGrid, SqlDtg,
  Vcl.WinXPanels, RpDriverAdapter,SqlFun, SqlSis;

type
  TfrmClienteView = class(TForm)
    pnlMain: TPanel;
    pnlButtons: TPanel;
    pnlEdits: TPanel;
    Grid: TSqlDtGrid;
    pnlTitle: TPanel;
    Label1: TLabel;
    Clientes: TCardPanel;
    viewClientes: TCard;
    viewCadastraCliente: TCard;
    btnCadastrar: TSQLBtn;
    bFiltrar: TSQLBtn;
    Panel1: TPanel;
    Panel2: TPanel;
    Panel3: TPanel;
    edtAno: TSQLEd;
    Panel4: TPanel;
    edtPlaca: TSQLEd;
    edtModelo: TSQLEd;
    edtSobrenome: TSQLEd;
    edtNome: TSQLEd;
    edtCpf: TSQLEd;
    Label2: TLabel;
    btnCadastrarClie: TSQLBtn;
    btnSair: TSQLBtn;
    btnCarregaGrid: TSQLBtn;
    procedure btnCadastrarClick(Sender: TObject);
    procedure btnSairClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnCarregaGridClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure btnCadastrarClieClick(Sender: TObject);
  private
    procedure carregarGrid;
  public
    { Public declarations }
  end;

var
  frmClienteView: TfrmClienteView;

implementation
uses clienteController,VeiculoController;


{$R *.dfm}



procedure TfrmClienteView.btnCadastrarClick(Sender: TObject);
begin
   Clientes.ActiveCard := viewCadastraCliente;
end;

procedure TfrmClienteView.btnCadastrarClieClick(Sender: TObject);
var clienteCon : TClienteController;
    veiculoCon : TVeiculoController;
begin
  clienteCon.insertClientes(edtNome.Text,edtSobrenome.Text,edtCpf.Text);
  veiculoCon.insertVeiculos(edtModelo.Text,edtPlaca.Text,edtAno.Text);
end;

procedure TfrmClienteView.btnCarregaGridClick(Sender: TObject);
begin
  carregarGrid;
end;

procedure TfrmClienteView.btnSairClick(Sender: TObject);
begin
   Clientes.ActiveCard := viewClientes;
end;

procedure TfrmClienteView.carregarGrid;
var Q:IQuery;
    i:integer;
begin
   i:=1;
   Q:= SqlToQuery('select nome,sobrenome,modelo,ano,placa,id_veic_clie from clientes as c inner join veiculos as v on c.id_clie = v.id_veic_clie');
   if not Q.IsEmpty then begin
     while not Q.Eof do begin
       Grid.Cells[Grid.GetColumn('nome'),i]:=Q.getString('nome');
       Grid.Cells[Grid.GetColumn('sobrenome'),i]:=Q.getString('sobrenome');
       Grid.Cells[Grid.GetColumn('modelo'),i]:=Q.getString('modelo');
       Grid.Cells[Grid.GetColumn('ano'),i]:=Q.getString('ano');
       Grid.Cells[Grid.GetColumn('placa'),i]:=Q.getString('placa');
       inc(i);
       if Grid.RowCount < i then begin
          Grid.CreateNewRow;
       end;
       Q.Next;
     end;
     Q.Free;Q.Close;
   end else begin
     Aviso('nenhum usuário encontrado');
   end;

end;

procedure TfrmClienteView.FormActivate(Sender: TObject);
begin
   Clientes.ActiveCard:=viewClientes;
end;

procedure TfrmClienteView.FormShow(Sender: TObject);
begin
   edtNome.SetFocus;
end;

end.
