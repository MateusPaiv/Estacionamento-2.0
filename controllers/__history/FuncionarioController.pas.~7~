unit FuncionarioController;

interface
type
  TFuncionarioController = class
    private
    public
      function insertFuncionario(nome,sobrenome,cpf,celular,cep,endereco,numero:string):boolean;
  end;
implementation

uses
  Vcl.Dialogs,Generics.Collections,FuncionarioModel,connection;

{ TFuncionarioController }

function TFuncionarioController.insertFuncionario(nome, sobrenome, cpf, celular,cep, endereco, numero: string): boolean;
var listaFuncionario:TObjectList<TFuncionario> ;
begin
   if (nome='') then begin
      MessageDlg('Nome não pode estar vazio',mtinformation,[mbOK],0);
      Result := false;
      exit;
   end;
   if (sobrenome='') then begin
      MessageDlg('Sobrenome não pode estar vazio',mtinformation,[mbOK],0);
      Result := false;
      exit;
   end;
   if (Cpf='') then begin
      MessageDlg('CPF não pode estar vazio',mtinformation,[mbOK],0);
      Result := false;
      exit;
   end;
    if (celular='') then begin
      MessageDlg('Nome não pode estar vazio',mtinformation,[mbOK],0);
      Result := false;
      exit;
   end;
    if (cep='') then begin
      MessageDlg('Nome não pode estar vazio',mtinformation,[mbOK],0);
      Result := false;
      exit;
   end;
    if (endereco='') then begin
      MessageDlg('Nome não pode estar vazio',mtinformation,[mbOK],0);
      Result := false;
      exit;
   end;
    if (numero='') then begin
      MessageDlg('Nome não pode estar vazio',mtinformation,[mbOK],0);
      Result := false;
      exit;
   end;

    listaFuncionario:=TObjectList<TFuncionario>.Create;
    listaFuncionario.Add(TFuncionario.Create(nome,sobrenome,cpf,celular,cep,endereco,numero));
    dm.cadastrarFuncionario(ListaFuncionario);
    listaFuncionario.Free;
end;

end.
